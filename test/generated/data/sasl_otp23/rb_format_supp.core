module 'rb_format_supp' ['module_info'/0,'module_info'/1,'print'/3] attributes [ 'file' = [{[115|[114|[99|[47|[114|[98|[95|[102|[111|[114|[109|[97|[116|[95|[115|[117|[112|[112|[46|[101|[114|[108]]]]]]]]]]]]]]]]]]]]]],1}] ] 'print'/3 = (fun (_0,_1,_2) -> case _1 of <{_X_Time,Rep}> when 'true' -> case Rep of <{'error_report',_X_GL,{Pid,'crash_report',CrashReport}}> when 'true' -> let <Header> = apply 'format_h'/4 (79,[67|[82|[65|[83|[72|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]],Pid,_0) in let <_6> = apply 'format_c'/1 (CrashReport) in do call 'format_lib_supp':'print_info' (_2,79,[{'header',Header}|_6]) 'true'
<{'error_report',_X_GL,{Pid,'supervisor_report',SupReport}}> when 'true' -> let <Header> = apply 'format_h'/4 (79,[83|[85|[80|[69|[82|[86|[73|[83|[79|[82|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]]]]]]],Pid,_0) in let <_8> = apply 'format_s'/1 (SupReport) in do call 'format_lib_supp':'print_info' (_2,79,[{'header',Header}|_8]) 'true'
<{'error_report',_X_GL,{Pid,_X_Type,Report1}}> when 'true' -> let <Header> = apply 'format_h'/4 (79,[69|[82|[82|[79|[82|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]],Pid,_0) in do call 'format_lib_supp':'print_info' (_2,79,[{'header',Header}|[{'data',Report1}|[]]]) 'true'
<{'info_report',_X_GL,{Pid,'progress',SupProgress}}> when 'true' -> let <Header> = apply 'format_h'/4 (79,[80|[82|[79|[71|[82|[69|[83|[83|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]]]]],Pid,_0) in let <_11> = apply 'format_p'/1 (SupProgress) in call 'format_lib_supp':'print_info' (_2,79,[{'header',Header}|_11])
<{'info_report',_X_GL,{Pid,_X_Type,Report1}}> when 'true' -> let <Header> = apply 'format_h'/4 (79,[73|[78|[70|[79|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]],Pid,_0) in do call 'format_lib_supp':'print_info' (_2,79,[{'header',Header}|[{'data',Report1}|[]]]) 'true'
<{'warning_report',_X_GL,{Pid,_X_Type,Report1}}> when 'true' -> let <Header> = apply 'format_h'/4 (79,[87|[65|[82|[78|[73|[78|[71|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]]]],Pid,_0) in do call 'format_lib_supp':'print_info' (_2,79,[{'header',Header}|[{'data',Report1}|[]]]) 'true'
<{'error',_X_GL,{Pid,Format,Args}}> when 'true' -> let <Header> = apply 'format_h'/4 (79,[69|[82|[82|[79|[82|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]],Pid,_0) in do call 'format_lib_supp':'print_info' (_2,79,[{'header',Header}|[]]) call 'io':'format' (_2,Format,Args)
<{'info_msg',_X_GL,{Pid,Format,Args}}> when 'true' -> let <Header> = apply 'format_h'/4 (79,[73|[78|[70|[79|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]],Pid,_0) in do call 'format_lib_supp':'print_info' (_2,79,[{'header',Header}|[]]) call 'io':'format' (_2,Format,Args)
<{'warning_msg',_X_GL,{Pid,Format,Args}}> when 'true' -> let <Header> = apply 'format_h'/4 (79,[87|[65|[82|[78|[73|[78|[71|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]]]],Pid,_0) in do call 'format_lib_supp':'print_info' (_2,79,[{'header',Header}|[]]) call 'io':'format' (_2,Format,Args)
<{Type,_X_GL,TypeReport}> when 'true' -> let <Modifier> = call 'misc_supp':'modifier' (_2) in let <_18> = call 'erlang':'++' (Modifier,[119|[62|[32|[126|[115|[126|[110]]]]]]]) in let <_19> = call 'erlang':'++' ([126|[110|[73|[110|[102|[111|[32|[116|[121|[112|[101|[32|[60|[126]]]]]]]]]]]]]],_18) in do call 'io':'format' (_2,_19,[Type|[_0|[]]]) let <_20> = call 'erlang':'++' (Modifier,[112]) in let <_21> = [126|_20] in call 'io':'format' (_2,_21,[TypeReport|[]])
<_29> when 'true' -> let <Modifier> = call 'misc_supp':'modifier' (_2) in do call 'io':'format' ([126|[110|[80|[114|[105|[110|[116|[105|[110|[103|[32|[105|[110|[102|[111|[32|[111|[102|[32|[117|[110|[107|[110|[111|[119|[110|[32|[116|[121|[112|[101|[46|[46|[46|[32|[126|[115|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[_0|[]]) let <_23> = call 'erlang':'++' (Modifier,[112]) in let <_24> = [126|_23] in call 'io':'format' (_2,_24,[_1|[]]) end
(<_4> when 'true' -> primop 'match_fail' ({'badmatch',_4})-|['compiler_generated'] ) end-|[{'function',{'print',3}}] )
'format_h'/4 = (fun (_0,_1,_2,_3) -> let <_4> = call 'io_lib':'format' ([126|[115|[32|[32|[126|[119]]]]]],[_1|[_2|[]]]) in let <NHeader> = call 'lists':'flatten' (_4) in let <DateLen> = call 'string':'length' (_3) in let <HeaderLen> = call 'erlang':'-' (_0,DateLen) in let <Format> = call 'lists':'concat' ([[126|[45]]|[HeaderLen|[[115|[126]]|[DateLen|[[115]]]]]]) in call 'io_lib':'format' (Format,[NHeader|[_3|[]]])-|[{'function',{'format_h',4}}] )
'format_c'/1 = (fun (_0) -> (case (_0-|[{'function',{'format_c',1}}] ) of <[OwnReport|[LinkReport|[]]]> when 'true' -> let <_1> = apply 'format_neighbours'/1 (LinkReport) in [{'items',{[67|[114|[97|[115|[104|[105|[110|[103|[32|[112|[114|[111|[99|[101|[115|[115]]]]]]]]]]]]]]]],OwnReport}}|[_1|[]]]
(<_2> when 'true' -> primop 'match_fail' ({'function_clause',_2})-|['compiler_generated'] ) end-|[{'function',{'format_c',1}}] )-|[{'function',{'format_c',1}}] )
'format_neighbours'/1 = (fun (_0) -> (case (_0-|[{'function',{'format_neighbours',1}}] ) of <[Data|Rest]> when 'true' -> let <_1> = apply 'format_neighbours'/1 (Rest) in [{'newline',1}|[{'items',{[78|[101|[105|[103|[104|[98|[111|[117|[114|[32|[112|[114|[111|[99|[101|[115|[115]]]]]]]]]]]]]]]]],Data}}|_1]]
<[]> when 'true' -> []
(<_2> when 'true' -> primop 'match_fail' ({'function_clause',_2})-|['compiler_generated'] ) end-|[{'function',{'format_neighbours',1}}] )-|[{'function',{'format_neighbours',1}}] )
'format_s'/1 = (fun (_0) -> let <SuperName> = apply 'get_opt'/2 ('supervisor',(_0-|[{'function',{'format_s',1}}] )) in let <ErrorContext> = apply 'get_opt'/2 ('errorContext',(_0-|[{'function',{'format_s',1}}] )) in let <Reason> = apply 'get_opt'/2 ('reason',(_0-|[{'function',{'format_s',1}}] )) in let <ChildInfo> = apply 'get_opt'/2 ('offender',(_0-|[{'function',{'format_s',1}}] )) in let <_7> = fun (_5) -> apply 'transform_mfa'/1 (_5) in let <_8> = call 'lists':'map' (_7,ChildInfo) in [{'data',[{[82|[101|[112|[111|[114|[116|[105|[110|[103|[32|[115|[117|[112|[101|[114|[118|[105|[115|[111|[114]]]]]]]]]]]]]]]]]]]],SuperName}|[]]}|[{'newline',1}|[{'items',{[67|[104|[105|[108|[100|[32|[112|[114|[111|[99|[101|[115|[115]]]]]]]]]]]]],[{'errorContext',ErrorContext}|[{'reason',Reason}|_8]]}}|[]]]]-|[{'function',{'format_s',1}}] )
'transform_mfa'/1 = (fun (_0) -> (case (_0-|[{'function',{'transform_mfa',1}}] ) of <{'mfa',Value}> when 'true' -> {'start_function',Value}
<X> when 'true' -> X end-|[{'function',{'transform_mfa',1}}] )-|[{'function',{'transform_mfa',1}}] )
'format_p'/1 = (fun (_0) -> [{'data',(_0-|[{'function',{'format_p',1}}] )}|[]]-|[{'function',{'format_p',1}}] )
'get_opt'/2 = (fun (_0,_1) -> case call 'lists':'keysearch' (_0,1,_1) of <{'value',{_X_Key,Val}}> when 'true' -> Val
<_5> when 'true' -> 'undefined' end-|[{'function',{'get_opt',2}}] )
'module_info'/0 = (fun () -> call 'erlang':'get_module_info' ('rb_format_supp')-|[{'function',{'module_info',0}}] )
'module_info'/1 = (fun (_0) -> call 'erlang':'get_module_info' ('rb_format_supp',(_0-|[{'function',{'module_info',1}}] ))-|[{'function',{'module_info',1}}] ) end